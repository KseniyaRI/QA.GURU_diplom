name: Playwright tests working web-service

on:
  push:
    branches: [ test-branch ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  packages: write

jobs:
  build_runner:
    timeout-minutes: 30
    runs-on: [ self-hosted, ARM64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and load runner image
        uses: docker/build-push-action@v4
        with:
          context: .runner
          file: .runner/Dockerfile
          push: false
          load: true
          tags: self-hosted-runner:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  testE2E:
    timeout-minutes: 30
    needs: build_runner
    runs-on: [ self-hosted, ARM64 ]
    container:
      image: self-hosted-runner:latest
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Grant Docker socket permissions
        run: sudo chmod 666 /var/run/docker.sock

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test \
            --reporter=list \
            --reporter=junit \
            --reporter=allure-playwright

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: test-results
          path: test-results
          retention-days: 30

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: allure-results
          path: allure-results
          retention-days: 30

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline@2.x
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure HTML report
        uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: allure-report
          path: allure-report

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
